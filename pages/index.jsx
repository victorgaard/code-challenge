import Head from "next/head";
import Image from "next/image";
import { useEffect, useState } from "react";
import styles from "../styles/Home.module.css";

export default function Home() {
  const [accounts, setAccounts] = useState(null);
  const [accountId, setAccountId] = useState("");
  const [accountStatus, setAccountStatus] = useState(null);
  const [accountCostsHistory, setAccountCostsHistory] = useState(null);

  const getAccounts = async () => {
    try {
      const response = await fetch(`https://hiring.oraculi.io/v1/accounts`);
      if (response.ok) {
        const responseJson = await response.json();
        setAccounts(responseJson);
        setAccountId(responseJson[0].id);
      }
    } catch (e) {
      throw new Error(e);
    }
  };

  const getAccountStatus = async (accountParam) => {
    if (!accountParam) {
      return;
    }

    try {
      const response = await fetch(
        `https://hiring.oraculi.io/v1/accounts/${accountId}`
      );
      if (response.ok) {
        const responseJson = await response.json();
        setAccountStatus(responseJson);
      }
    } catch (e) {
      throw new Error(e);
    }
  };

  const getAccountCostsHistory = async (accountParam) => {
    if (!accountParam) {
      return;
    }

    try {
      const response = await fetch(
        `https://hiring.oraculi.io/v1/accounts/${accountId}/history`
      );
      if (response.ok) {
        const responseJson = await response.json();
        setAccountCostsHistory(responseJson);
      }
    } catch (e) {
      throw new Error(e);
    }
  };

  const handleChange = ({ target }) => {
    setAccountId(target.value);
  };

  useEffect(() => {
    getAccounts();
  }, []);

  useEffect(() => {
    setAccountId(accountId);
    getAccountStatus(accountId);
    getAccountCostsHistory(accountId);
  }, [accountId]);

  return (
    <div className={styles.container}>
      <Head>
        <title>Oraculi - Frontend Challenge</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1>Select your account</h1>

        <select onChange={handleChange}>
          {!!accounts &&
            accounts.map((account) => (
              <option key={account.id} value={account.id}>
                {account.provider} - {account.label}
              </option>
            ))}
        </select>

        <div>
          <h1>Bill</h1>
          {!!accountStatus && <p>{accountStatus.bill}</p>}
        </div>

        <div>
          <h1>Servers</h1>
          {!!accountStatus && <p>{accountStatus.servers}</p>}
        </div>

        <div>
          <h1>Regions</h1>
          {!!accountStatus && <p>{accountStatus.regions}</p>}
        </div>

        <div>
          <h1>Alarms</h1>
          {!!accountStatus && <p>{accountStatus.alarms}</p>}
        </div>

        <div>
          <h1>Monthly costs</h1>
          {!!accountCostsHistory &&
            accountCostsHistory.map((costs) => (
              <div key={costs.date}>
                <p>{costs.date}</p>
                {costs.groups.map((cost) => (
                  <p key={cost.key}>
                    {cost.key} - {cost.amount}
                  </p>
                ))}
              </div>
            ))}
        </div>
      </main>
    </div>
  );
}
